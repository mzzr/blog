{"version":3,"sources":["components/nav/Nav.js","components/sider/Sider.js","components/article/Article.js","components/article/ArticleList.js","App.js","serviceWorker.js","index.js"],"names":["Nav","match","useRouteMatch","path","params","console","log","style","borderBottom","marginTop","margin","maxWidth","className","display","selectedKeys","mode","Item","key","to","Sider","Layout","Meta","Card","LeftSider","iconStyle","fontSize","color","breakpoint","trigger","collapsedWidth","width","background","cover","alt","src","actions","type","onClick","window","open","title","description","codeRenderer","props","language","monoBlue","showLineNumbers","lineNumberProps","textAlign","value","headingRenderer","level","text","children","imageRenderer","Article","id","useParams","useState","data","setData","useEffect","fetch","then","response","source","renderers","code","heading","image","Title","Typography","Text","Paragraph","TagList","colorMap","tags","tagList","i","length","tag","push","ListItem","item","height","boxSizing","padding","span","href","fontFamily","date","ellipsis","rows","ArticleList","loading","setLoading","json","itemLayout","size","pagination","onChange","page","pageSize","split","dataSource","renderItem","Content","contentStyle","Footer","NoMatch","status","subTitle","extra","App","exact","from","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ddc07f1.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu } from 'antd';\nimport {\n  Link,\n  useRouteMatch,\n} from \"react-router-dom\";\n\nimport './Nav.css'\n\nexport default function Nav() {\n    const match = useRouteMatch(\"/:path\");\n    const path = match && match.params.path;\n    console.log(path)\n    return (\n      <div style = {{ borderBottom: \"#ededed 1px solid\", marginTop: \"6px\", margin: \"auto\", maxWidth: 1125}}>\n        <div className=\"logo\">Miaorui's Blog</div>\n        <div style = {{ display: \"inline-block\" }}>\n            <Menu selectedKeys={[path]} mode=\"horizontal\">\n            <Menu.Item key=\"blog\">\n                <Link to=\"/blog\">Articles</Link>\n            </Menu.Item>\n            <Menu.Item key=\"projects\">\n                <Link to=\"/projects\">Projects</Link>\n            </Menu.Item>\n            </Menu>\n        </div>        \n      </div>\n    )\n  }","import React from 'react';\nimport { Card, Icon, Layout } from 'antd';\nconst { Sider } = Layout;\nconst { Meta } = Card;\n\nexport default function LeftSider() {\n    const iconStyle = { fontSize: '20px', color: '#046' };\n    return (\n        <Sider breakpoint=\"lg\" trigger={null} collapsedWidth=\"0\" width={300} style={{ background: '#fff' }}>\n            <Card\n                style={{ width: 250, margin: 30 }}\n                cover={\n                <img\n                    alt=\"example\"\n                    src={process.env.PUBLIC_URL + '/avator.jpg'}\n                />\n                }\n                actions={[\n                <Icon type=\"github\" style={iconStyle} onClick={() => window.open('https://github.com/mzzr')} />,\n                <Icon type=\"facebook\" style={iconStyle} />,\n                <Icon type=\"mail\" style={iconStyle}  onClick={() => window.open('mailto:0xmzzr@gmail.com')}/>,\n                ]}\n            >\n                <Meta\n                title=\"Rui Miao\"\n                description=\"No description yet.\"\n                />\n            </Card>\n        </Sider>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport ReactMarkdown from 'react-markdown';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { monoBlue } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { Card } from 'antd';\n\nfunction codeRenderer(props) {\n    return (\n        <SyntaxHighlighter \n            language={props.language} \n            style={monoBlue} \n            showLineNumbers={true}\n            lineNumberProps={{ \n                style: { display: 'block', background: '#dee', width: 30, textAlign: 'center', color: '#108ee9' }\n            }}\n        >\n            {props.value}\n        </SyntaxHighlighter>\n    )\n}\n\nfunction headingRenderer(props) {\n    const level = props.level\n    const text = props.children[0].props.value\n    switch (level) {\n        case 1:\n          return <h1 style={{fontSize: \"2.5em\"}}> {text} </h1>\n        case 2:\n          return <h2 style={{borderBottom: \"2px solid #999\"}}> {text} </h2>\n        case 3:\n          return <h3> {text} </h3>\n        case 4:\n          return <h4> {text} </h4>\n        case 6:\n          return <h5> {text} </h5>\n        case 5:\n          return <h6> {text} </h6>\n        default:\n          return <h6> {text} </h6>\n      }\n}\n\nfunction imageRenderer(props) {\n    return (\n        <Card>\n            <img alt=\"\" {...props} style={{width: \"70%\", maxWidth: 800}}></img>\n        </Card>\n    )\n}\n\nexport default function Article() {\n    const { id } = useParams();\n    const [data, setData] = useState();\n\n    useEffect(() => {\n        fetch(process.env.PUBLIC_URL + '/articles/' + id + '.md')\n        .then(response => response.text())\n        .then(data => {\n            setData(data);\n        });\n    }, [id])\n\n    return (\n        <div>\n            <ReactMarkdown \n                source={data}\n                renderers={{\n                    code: codeRenderer,\n                    heading: headingRenderer,\n                    image: imageRenderer,\n                }} \n            />\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { List, Typography, Row, Col, Icon, Tag } from 'antd';\nimport { Link } from \"react-router-dom\";\n\nconst { Title, Text, Paragraph } = Typography;\n\nfunction TagList(props) {\n    const colorMap = {\n        \"随笔\": \"magenta\",\n        \"MLDL\": \"purple\",\n        \"后端\": \"geekblue\"\n    }\n    let tags = props.tags || [];\n    let tagList = []\n    for (let i = 0; i < tags.length; i++) {\n        let tag = tags[i]\n        tagList.push(<Tag key={i} color={colorMap[tag]}>{tag}</Tag>)\n    }\n    return (<div>{tagList}</div>)\n}\n\nfunction ListItem(props) {\n    let itemStyle = {\n        borderBottom: \"1px solid #e8e8e8\",\n        margin: \"0px\",\n        height: \"200px\",\n        boxSizing: \"border-box\",\n        padding: \"10px\",\n        color: \"#666\",\n    }\n    let item = props.item\n    return (\n            <div style={itemStyle} >\n                <Row>\n                    <Col span={18}>\n                        <Link to={item.href}>\n                            <Title level={3} style={{margin: 0}}>{ item.title }</Title>\n                        </Link>\n                    </Col> \n                    <Col span={6} style={{textAlign: \"right\"}}>\n                        <Icon type=\"clock-circle\" />\n                        <Text style={{fontFamily: \"Georgia,serif\"}}>&nbsp;{item.date}</Text>\n                    </Col>\n                </Row>\n                <TagList tags={item.tags} />\n                <Paragraph type=\"secondary\" ellipsis={{ rows: 4}} style={{marginTop: 10}}>\n                    { item.description }\n                </Paragraph>\n            </div>\n    )   \n};\n\nexport default function ArticleList() {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetch(process.env.PUBLIC_URL + '/articles.json')\n        .then(response => response.json())\n        .then(data => {\n            setData(data);\n            setLoading(false);\n        });\n    }, [])\n\n    return loading || (\n        <List\n            itemLayout=\"vertical\"\n            size=\"middle\"\n            pagination={{\n            onChange: page => {\n                console.log(page);\n            },\n            pageSize: 3,\n            }}\n            split={true}\n            dataSource={data}\n            renderItem={item => (<ListItem item={item}/>)}\n        />\n    )\n}","import React from 'react';\nimport { Layout, Result, Button } from 'antd';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport './App.css';\nimport Nav from './components/nav/Nav';\nimport LeftSider from './components/sider/Sider';\nimport Article from './components/article/Article';\nimport ArticleList from './components/article/ArticleList';\n\nconst { Content, Footer } = Layout;\nconst contentStyle = {\n  background: \"#fff\",\n  padding: 24,\n}\n\n// const pageHeight = document.body.clientHeight\n// console.log(1111, pageHeight)\n// const layoutStyle = {\n//   background: 'linear-gradient(#002E4B 50%, #0081B6 50%)',\n//   backgroundSize: '100% 50px',\n//   backgroundPosition: '0 35px',\n//   height: pageHeight,\n// }\n\nfunction NoMatch() {\n  return (\n    <Result\n      status=\"404\"\n      title=\"404\"\n      subTitle=\"Sorry, the page you visited does not exist.\"\n      extra={\n        <Link to=\"/blog\">\n          <Button type=\"primary\">Back Home</Button>\n        </Link>\n      }\n    />\n  )\n}\n\nfunction App() {\n  return (\n    <Router>\n      <Nav style={{  }} />\n      <Layout style={{ margin: \"auto\", maxWidth: 1125 }} >\n        <LeftSider/>\n        <Content style={ contentStyle } >\n          <Switch>\n            <Redirect exact from='/' to='/blog'/>\n            <Route exact path=\"/blog\">\n              <ArticleList />\n            </Route>\n            <Route exact path=\"/blog/:id\">\n              <Article />\n            </Route>\n            <Route path=\"/projects\">\n              Projects placeholder.\n            </Route>\n            <Route path=\"*\">\n              <NoMatch />\n            </Route>\n          </Switch>\n        </Content>\n      </Layout>\n      <div style={{ textAlign: 'center' }}>版权所有 ©️ 京ICP备19010859号-1</div>\n\n\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}